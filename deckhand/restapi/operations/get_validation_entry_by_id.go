// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetValidationEntryByIDHandlerFunc turns a function with the right signature into a get validation entry by Id handler
type GetValidationEntryByIDHandlerFunc func(GetValidationEntryByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetValidationEntryByIDHandlerFunc) Handle(params GetValidationEntryByIDParams) middleware.Responder {
	return fn(params)
}

// GetValidationEntryByIDHandler interface for that can handle valid get validation entry by Id params
type GetValidationEntryByIDHandler interface {
	Handle(GetValidationEntryByIDParams) middleware.Responder
}

// NewGetValidationEntryByID creates a new http.Handler for the get validation entry by Id operation
func NewGetValidationEntryByID(ctx *middleware.Context, handler GetValidationEntryByIDHandler) *GetValidationEntryByID {
	return &GetValidationEntryByID{Context: ctx, Handler: handler}
}

/*GetValidationEntryByID swagger:route GET /api/v1.0/revisions/{revision-id}/validations/{validation-name}/entries/{entry-id} getValidationEntryById

Gets the full details of a particular validation entry, including all posted error details.

*/
type GetValidationEntryByID struct {
	Context *middleware.Context
	Handler GetValidationEntryByIDHandler
}

func (o *GetValidationEntryByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetValidationEntryByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
