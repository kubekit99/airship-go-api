// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetRevisionByIDHandlerFunc turns a function with the right signature into a get revision by Id handler
type GetRevisionByIDHandlerFunc func(GetRevisionByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRevisionByIDHandlerFunc) Handle(params GetRevisionByIDParams) middleware.Responder {
	return fn(params)
}

// GetRevisionByIDHandler interface for that can handle valid get revision by Id params
type GetRevisionByIDHandler interface {
	Handle(GetRevisionByIDParams) middleware.Responder
}

// NewGetRevisionByID creates a new http.Handler for the get revision by Id operation
func NewGetRevisionByID(ctx *middleware.Context, handler GetRevisionByIDHandler) *GetRevisionByID {
	return &GetRevisionByID{Context: ctx, Handler: handler}
}

/*GetRevisionByID swagger:route GET /api/v1.0/revisions/{revision-id} getRevisionById

Show details for a revisions.

*/
type GetRevisionByID struct {
	Context *middleware.Context
	Handler GetRevisionByIDHandler
}

func (o *GetRevisionByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetRevisionByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
