// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetRenderedDocumentsByIDHandlerFunc turns a function with the right signature into a get rendered documents by Id handler
type GetRenderedDocumentsByIDHandlerFunc func(GetRenderedDocumentsByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRenderedDocumentsByIDHandlerFunc) Handle(params GetRenderedDocumentsByIDParams) middleware.Responder {
	return fn(params)
}

// GetRenderedDocumentsByIDHandler interface for that can handle valid get rendered documents by Id params
type GetRenderedDocumentsByIDHandler interface {
	Handle(GetRenderedDocumentsByIDParams) middleware.Responder
}

// NewGetRenderedDocumentsByID creates a new http.Handler for the get rendered documents by Id operation
func NewGetRenderedDocumentsByID(ctx *middleware.Context, handler GetRenderedDocumentsByIDHandler) *GetRenderedDocumentsByID {
	return &GetRenderedDocumentsByID{Context: ctx, Handler: handler}
}

/*GetRenderedDocumentsByID swagger:route GET /api/v1.0/revisions/{revision-id}/rendered-documents getRenderedDocumentsById

List encrypted documents for a revision (with no layering or substitution applied) as well as fully layered and substituted concrete documents.  Only enforced after ``list_cleartext_documents`` passes.  Conditionally enforced for the endpoints below if any of the documents in the request body have a ``metadata.storagePolicy`` of  encrypted . If policy enforcement fails, encrypted documents are excluded from the response.

*/
type GetRenderedDocumentsByID struct {
	Context *middleware.Context
	Handler GetRenderedDocumentsByIDHandler
}

func (o *GetRenderedDocumentsByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetRenderedDocumentsByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
