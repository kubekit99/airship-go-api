// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ShowRevisionDeepDiffHandlerFunc turns a function with the right signature into a show revision deep diff handler
type ShowRevisionDeepDiffHandlerFunc func(ShowRevisionDeepDiffParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowRevisionDeepDiffHandlerFunc) Handle(params ShowRevisionDeepDiffParams) middleware.Responder {
	return fn(params)
}

// ShowRevisionDeepDiffHandler interface for that can handle valid show revision deep diff params
type ShowRevisionDeepDiffHandler interface {
	Handle(ShowRevisionDeepDiffParams) middleware.Responder
}

// NewShowRevisionDeepDiff creates a new http.Handler for the show revision deep diff operation
func NewShowRevisionDeepDiff(ctx *middleware.Context, handler ShowRevisionDeepDiffHandler) *ShowRevisionDeepDiff {
	return &ShowRevisionDeepDiff{Context: ctx, Handler: handler}
}

/*ShowRevisionDeepDiff swagger:route GET /api/v1.0/revisions/{revision-id}/deepdiff/{comparison-revision-id} showRevisionDeepDiff

Show revision deep diff between two revisions.

*/
type ShowRevisionDeepDiff struct {
	Context *middleware.Context
	Handler ShowRevisionDeepDiffHandler
}

func (o *ShowRevisionDeepDiff) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewShowRevisionDeepDiffParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
