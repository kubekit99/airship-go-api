// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteAllTagsReader is a Reader for the DeleteAllTags structure.
type DeleteAllTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAllTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteAllTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteAllTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteAllTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteAllTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAllTagsOK creates a DeleteAllTagsOK with default headers values
func NewDeleteAllTagsOK() *DeleteAllTagsOK {
	return &DeleteAllTagsOK{}
}

/*DeleteAllTagsOK handles this case with default header values.

Generic String answer
*/
type DeleteAllTagsOK struct {
	Payload string
}

func (o *DeleteAllTagsOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/revisions/{revision-id}/tags][%d] deleteAllTagsOK  %+v", 200, o.Payload)
}

func (o *DeleteAllTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllTagsUnauthorized creates a DeleteAllTagsUnauthorized with default headers values
func NewDeleteAllTagsUnauthorized() *DeleteAllTagsUnauthorized {
	return &DeleteAllTagsUnauthorized{}
}

/*DeleteAllTagsUnauthorized handles this case with default header values.

401 Not authorized
*/
type DeleteAllTagsUnauthorized struct {
}

func (o *DeleteAllTagsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/revisions/{revision-id}/tags][%d] deleteAllTagsUnauthorized ", 401)
}

func (o *DeleteAllTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllTagsForbidden creates a DeleteAllTagsForbidden with default headers values
func NewDeleteAllTagsForbidden() *DeleteAllTagsForbidden {
	return &DeleteAllTagsForbidden{}
}

/*DeleteAllTagsForbidden handles this case with default header values.

403 Forbidden
*/
type DeleteAllTagsForbidden struct {
}

func (o *DeleteAllTagsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/revisions/{revision-id}/tags][%d] deleteAllTagsForbidden ", 403)
}

func (o *DeleteAllTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllTagsInternalServerError creates a DeleteAllTagsInternalServerError with default headers values
func NewDeleteAllTagsInternalServerError() *DeleteAllTagsInternalServerError {
	return &DeleteAllTagsInternalServerError{}
}

/*DeleteAllTagsInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type DeleteAllTagsInternalServerError struct {
}

func (o *DeleteAllTagsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/revisions/{revision-id}/tags][%d] deleteAllTagsInternalServerError ", 500)
}

func (o *DeleteAllTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
