// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ShowRevisionDiffReader is a Reader for the ShowRevisionDiff structure.
type ShowRevisionDiffReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowRevisionDiffReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShowRevisionDiffOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewShowRevisionDiffUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewShowRevisionDiffForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewShowRevisionDiffInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShowRevisionDiffOK creates a ShowRevisionDiffOK with default headers values
func NewShowRevisionDiffOK() *ShowRevisionDiffOK {
	return &ShowRevisionDiffOK{}
}

/*ShowRevisionDiffOK handles this case with default header values.

Generic String answer
*/
type ShowRevisionDiffOK struct {
	Payload string
}

func (o *ShowRevisionDiffOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/diff/{comparison-revision-id}][%d] showRevisionDiffOK  %+v", 200, o.Payload)
}

func (o *ShowRevisionDiffOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowRevisionDiffUnauthorized creates a ShowRevisionDiffUnauthorized with default headers values
func NewShowRevisionDiffUnauthorized() *ShowRevisionDiffUnauthorized {
	return &ShowRevisionDiffUnauthorized{}
}

/*ShowRevisionDiffUnauthorized handles this case with default header values.

401 Not authorized
*/
type ShowRevisionDiffUnauthorized struct {
}

func (o *ShowRevisionDiffUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/diff/{comparison-revision-id}][%d] showRevisionDiffUnauthorized ", 401)
}

func (o *ShowRevisionDiffUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShowRevisionDiffForbidden creates a ShowRevisionDiffForbidden with default headers values
func NewShowRevisionDiffForbidden() *ShowRevisionDiffForbidden {
	return &ShowRevisionDiffForbidden{}
}

/*ShowRevisionDiffForbidden handles this case with default header values.

403 Forbidden
*/
type ShowRevisionDiffForbidden struct {
}

func (o *ShowRevisionDiffForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/diff/{comparison-revision-id}][%d] showRevisionDiffForbidden ", 403)
}

func (o *ShowRevisionDiffForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShowRevisionDiffInternalServerError creates a ShowRevisionDiffInternalServerError with default headers values
func NewShowRevisionDiffInternalServerError() *ShowRevisionDiffInternalServerError {
	return &ShowRevisionDiffInternalServerError{}
}

/*ShowRevisionDiffInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type ShowRevisionDiffInternalServerError struct {
}

func (o *ShowRevisionDiffInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/diff/{comparison-revision-id}][%d] showRevisionDiffInternalServerError ", 500)
}

func (o *ShowRevisionDiffInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
