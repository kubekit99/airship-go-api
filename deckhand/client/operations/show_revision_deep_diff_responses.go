// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ShowRevisionDeepDiffReader is a Reader for the ShowRevisionDeepDiff structure.
type ShowRevisionDeepDiffReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowRevisionDeepDiffReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShowRevisionDeepDiffOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewShowRevisionDeepDiffUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewShowRevisionDeepDiffForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewShowRevisionDeepDiffInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShowRevisionDeepDiffOK creates a ShowRevisionDeepDiffOK with default headers values
func NewShowRevisionDeepDiffOK() *ShowRevisionDeepDiffOK {
	return &ShowRevisionDeepDiffOK{}
}

/*ShowRevisionDeepDiffOK handles this case with default header values.

Generic String answer
*/
type ShowRevisionDeepDiffOK struct {
	Payload string
}

func (o *ShowRevisionDeepDiffOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/deepdiff/{comparison-revision-id}][%d] showRevisionDeepDiffOK  %+v", 200, o.Payload)
}

func (o *ShowRevisionDeepDiffOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowRevisionDeepDiffUnauthorized creates a ShowRevisionDeepDiffUnauthorized with default headers values
func NewShowRevisionDeepDiffUnauthorized() *ShowRevisionDeepDiffUnauthorized {
	return &ShowRevisionDeepDiffUnauthorized{}
}

/*ShowRevisionDeepDiffUnauthorized handles this case with default header values.

401 Not authorized
*/
type ShowRevisionDeepDiffUnauthorized struct {
}

func (o *ShowRevisionDeepDiffUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/deepdiff/{comparison-revision-id}][%d] showRevisionDeepDiffUnauthorized ", 401)
}

func (o *ShowRevisionDeepDiffUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShowRevisionDeepDiffForbidden creates a ShowRevisionDeepDiffForbidden with default headers values
func NewShowRevisionDeepDiffForbidden() *ShowRevisionDeepDiffForbidden {
	return &ShowRevisionDeepDiffForbidden{}
}

/*ShowRevisionDeepDiffForbidden handles this case with default header values.

403 Forbidden
*/
type ShowRevisionDeepDiffForbidden struct {
}

func (o *ShowRevisionDeepDiffForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/deepdiff/{comparison-revision-id}][%d] showRevisionDeepDiffForbidden ", 403)
}

func (o *ShowRevisionDeepDiffForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShowRevisionDeepDiffInternalServerError creates a ShowRevisionDeepDiffInternalServerError with default headers values
func NewShowRevisionDeepDiffInternalServerError() *ShowRevisionDeepDiffInternalServerError {
	return &ShowRevisionDeepDiffInternalServerError{}
}

/*ShowRevisionDeepDiffInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type ShowRevisionDeepDiffInternalServerError struct {
}

func (o *ShowRevisionDeepDiffInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/revisions/{revision-id}/deepdiff/{comparison-revision-id}][%d] showRevisionDeepDiffInternalServerError ", 500)
}

func (o *ShowRevisionDeepDiffInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
