// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// InvokeHelmTestsReader is a Reader for the InvokeHelmTests structure.
type InvokeHelmTestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvokeHelmTestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInvokeHelmTestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewInvokeHelmTestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewInvokeHelmTestsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewInvokeHelmTestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInvokeHelmTestsOK creates a InvokeHelmTestsOK with default headers values
func NewInvokeHelmTestsOK() *InvokeHelmTestsOK {
	return &InvokeHelmTestsOK{}
}

/*InvokeHelmTestsOK handles this case with default header values.

Generic String answer
*/
type InvokeHelmTestsOK struct {
	Payload string
}

func (o *InvokeHelmTestsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/actions][%d] invokeHelmTestsOK  %+v", 200, o.Payload)
}

func (o *InvokeHelmTestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeHelmTestsUnauthorized creates a InvokeHelmTestsUnauthorized with default headers values
func NewInvokeHelmTestsUnauthorized() *InvokeHelmTestsUnauthorized {
	return &InvokeHelmTestsUnauthorized{}
}

/*InvokeHelmTestsUnauthorized handles this case with default header values.

401 Not authorized
*/
type InvokeHelmTestsUnauthorized struct {
}

func (o *InvokeHelmTestsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/actions][%d] invokeHelmTestsUnauthorized ", 401)
}

func (o *InvokeHelmTestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvokeHelmTestsForbidden creates a InvokeHelmTestsForbidden with default headers values
func NewInvokeHelmTestsForbidden() *InvokeHelmTestsForbidden {
	return &InvokeHelmTestsForbidden{}
}

/*InvokeHelmTestsForbidden handles this case with default header values.

403 Forbidden
*/
type InvokeHelmTestsForbidden struct {
}

func (o *InvokeHelmTestsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/actions][%d] invokeHelmTestsForbidden ", 403)
}

func (o *InvokeHelmTestsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvokeHelmTestsInternalServerError creates a InvokeHelmTestsInternalServerError with default headers values
func NewInvokeHelmTestsInternalServerError() *InvokeHelmTestsInternalServerError {
	return &InvokeHelmTestsInternalServerError{}
}

/*InvokeHelmTestsInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type InvokeHelmTestsInternalServerError struct {
}

func (o *InvokeHelmTestsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/actions][%d] invokeHelmTestsInternalServerError ", 500)
}

func (o *InvokeHelmTestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
