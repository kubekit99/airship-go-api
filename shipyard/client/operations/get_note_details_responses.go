// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetNoteDetailsReader is a Reader for the GetNoteDetails structure.
type GetNoteDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNoteDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNoteDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetNoteDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetNoteDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetNoteDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNoteDetailsOK creates a GetNoteDetailsOK with default headers values
func NewGetNoteDetailsOK() *GetNoteDetailsOK {
	return &GetNoteDetailsOK{}
}

/*GetNoteDetailsOK handles this case with default header values.

Generic String answer
*/
type GetNoteDetailsOK struct {
	Payload string
}

func (o *GetNoteDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/notedetails/{note-id}][%d] getNoteDetailsOK  %+v", 200, o.Payload)
}

func (o *GetNoteDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNoteDetailsUnauthorized creates a GetNoteDetailsUnauthorized with default headers values
func NewGetNoteDetailsUnauthorized() *GetNoteDetailsUnauthorized {
	return &GetNoteDetailsUnauthorized{}
}

/*GetNoteDetailsUnauthorized handles this case with default header values.

401 Not authorized
*/
type GetNoteDetailsUnauthorized struct {
}

func (o *GetNoteDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/notedetails/{note-id}][%d] getNoteDetailsUnauthorized ", 401)
}

func (o *GetNoteDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNoteDetailsForbidden creates a GetNoteDetailsForbidden with default headers values
func NewGetNoteDetailsForbidden() *GetNoteDetailsForbidden {
	return &GetNoteDetailsForbidden{}
}

/*GetNoteDetailsForbidden handles this case with default header values.

403 Forbidden
*/
type GetNoteDetailsForbidden struct {
}

func (o *GetNoteDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/notedetails/{note-id}][%d] getNoteDetailsForbidden ", 403)
}

func (o *GetNoteDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNoteDetailsInternalServerError creates a GetNoteDetailsInternalServerError with default headers values
func NewGetNoteDetailsInternalServerError() *GetNoteDetailsInternalServerError {
	return &GetNoteDetailsInternalServerError{}
}

/*GetNoteDetailsInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type GetNoteDetailsInternalServerError struct {
}

func (o *GetNoteDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/notedetails/{note-id}][%d] getNoteDetailsInternalServerError ", 500)
}

func (o *GetNoteDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
