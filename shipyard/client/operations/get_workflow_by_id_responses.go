// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetWorkflowByIDReader is a Reader for the GetWorkflowByID structure.
type GetWorkflowByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWorkflowByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetWorkflowByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetWorkflowByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetWorkflowByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetWorkflowByIDOK creates a GetWorkflowByIDOK with default headers values
func NewGetWorkflowByIDOK() *GetWorkflowByIDOK {
	return &GetWorkflowByIDOK{}
}

/*GetWorkflowByIDOK handles this case with default header values.

Generic String answer
*/
type GetWorkflowByIDOK struct {
	Payload string
}

func (o *GetWorkflowByIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/workflows/{workflow-id}][%d] getWorkflowByIdOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowByIDUnauthorized creates a GetWorkflowByIDUnauthorized with default headers values
func NewGetWorkflowByIDUnauthorized() *GetWorkflowByIDUnauthorized {
	return &GetWorkflowByIDUnauthorized{}
}

/*GetWorkflowByIDUnauthorized handles this case with default header values.

401 Not authorized
*/
type GetWorkflowByIDUnauthorized struct {
}

func (o *GetWorkflowByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/workflows/{workflow-id}][%d] getWorkflowByIdUnauthorized ", 401)
}

func (o *GetWorkflowByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowByIDForbidden creates a GetWorkflowByIDForbidden with default headers values
func NewGetWorkflowByIDForbidden() *GetWorkflowByIDForbidden {
	return &GetWorkflowByIDForbidden{}
}

/*GetWorkflowByIDForbidden handles this case with default header values.

403 Forbidden
*/
type GetWorkflowByIDForbidden struct {
}

func (o *GetWorkflowByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/workflows/{workflow-id}][%d] getWorkflowByIdForbidden ", 403)
}

func (o *GetWorkflowByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowByIDInternalServerError creates a GetWorkflowByIDInternalServerError with default headers values
func NewGetWorkflowByIDInternalServerError() *GetWorkflowByIDInternalServerError {
	return &GetWorkflowByIDInternalServerError{}
}

/*GetWorkflowByIDInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type GetWorkflowByIDInternalServerError struct {
}

func (o *GetWorkflowByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/workflows/{workflow-id}][%d] getWorkflowByIdInternalServerError ", 500)
}

func (o *GetWorkflowByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
