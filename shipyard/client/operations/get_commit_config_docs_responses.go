// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetCommitConfigDocsReader is a Reader for the GetCommitConfigDocs structure.
type GetCommitConfigDocsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommitConfigDocsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCommitConfigDocsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCommitConfigDocsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCommitConfigDocsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCommitConfigDocsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCommitConfigDocsOK creates a GetCommitConfigDocsOK with default headers values
func NewGetCommitConfigDocsOK() *GetCommitConfigDocsOK {
	return &GetCommitConfigDocsOK{}
}

/*GetCommitConfigDocsOK handles this case with default header values.

Generic String answer
*/
type GetCommitConfigDocsOK struct {
	Payload string
}

func (o *GetCommitConfigDocsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/commitconfigdocs][%d] getCommitConfigDocsOK  %+v", 200, o.Payload)
}

func (o *GetCommitConfigDocsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommitConfigDocsUnauthorized creates a GetCommitConfigDocsUnauthorized with default headers values
func NewGetCommitConfigDocsUnauthorized() *GetCommitConfigDocsUnauthorized {
	return &GetCommitConfigDocsUnauthorized{}
}

/*GetCommitConfigDocsUnauthorized handles this case with default header values.

401 Not authorized
*/
type GetCommitConfigDocsUnauthorized struct {
}

func (o *GetCommitConfigDocsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/commitconfigdocs][%d] getCommitConfigDocsUnauthorized ", 401)
}

func (o *GetCommitConfigDocsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCommitConfigDocsForbidden creates a GetCommitConfigDocsForbidden with default headers values
func NewGetCommitConfigDocsForbidden() *GetCommitConfigDocsForbidden {
	return &GetCommitConfigDocsForbidden{}
}

/*GetCommitConfigDocsForbidden handles this case with default header values.

403 Forbidden
*/
type GetCommitConfigDocsForbidden struct {
}

func (o *GetCommitConfigDocsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/commitconfigdocs][%d] getCommitConfigDocsForbidden ", 403)
}

func (o *GetCommitConfigDocsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCommitConfigDocsInternalServerError creates a GetCommitConfigDocsInternalServerError with default headers values
func NewGetCommitConfigDocsInternalServerError() *GetCommitConfigDocsInternalServerError {
	return &GetCommitConfigDocsInternalServerError{}
}

/*GetCommitConfigDocsInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type GetCommitConfigDocsInternalServerError struct {
}

func (o *GetCommitConfigDocsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/commitconfigdocs][%d] getCommitConfigDocsInternalServerError ", 500)
}

func (o *GetCommitConfigDocsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
