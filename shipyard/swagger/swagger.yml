swagger: "2.0"
info:
  title: Shipyard
  version: 0.1.0
  description: |
    Shipyard provides operators a way to deploy or upgrade collection of helm
    charts using a single command.
  contact:
    name: Shipyard Github Repository
    url: https://github.com/openstack/airship-shipyard
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /
schemes:
  - http
# - https
consumes:
  - application/json
paths:
  /liveness:
    get:
      produces:
        - text/plain
      parameters:
        - $ref: "#/parameters/x-auth-token"
      operationId: probeLiveness
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
  /readiness:
    get:
      produces:
        - text/plain
      parameters:
        - $ref: "#/parameters/x-auth-token"
      operationId: probeReadiness
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
  /config:
    get:
      produces:
        - text/plain
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - name: name
          required: false
          type: string
          in: query
          description: defaults to all if not given
      operationId: getConfig
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
  /versions:
    get:
      description: Returns list of all supported versions of Shipyard. Currently this returns a static value.
      operationId: getVersions
      responses:
        '200':
          $ref: "#/responses/response-get-versions"
  /api/v1.0/health:
    get:
      description: Returns the '/health'
      operationId: getHealth
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    get:
      description: List workflow actions invoked by users
      operationId: getWFActionByUsers
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action
      operationId: createWFAction
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions/{action-id}:
    get:
      description: Retrieve an action by its id
      operationId: getWFActionById
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/action-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions/{action-id}/steps/{step-id}:
    get:
      description: Retrieve an action step by its id
      operationId: getWFActionStepById
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/action-id"
        - $ref: "#/parameters/step-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions/{action-id}/steps/{step-id}/logs:
    get:
      description: Retrieve logs of an action step by its id
      operationId: getWFActionStepLogsById
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/action-id"
        - $ref: "#/parameters/step-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions/{action-id}/validations/{validation-id}:
    get:
      description: Retrieve an action validation by its id
      operationId: getWFActionValidationById
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/action-id"
        - $ref: "#/parameters/validation-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions/{action-id}/control/{control-verb}:
    post:
      description: Send a control to an action
      operationId: sendControlToWFAction
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/action-id"
        - $ref: "#/parameters/control-verb"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/configdocs:
    get:
      description: Retrieve the status of the configdocs
      operationId: retrieveConfigDocsStatus
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/configdocs/{collection-id}:
    post:
      description: Ingest configuration documents for the site design
      operationId: ingestConfigDocsForCollectionId
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/collection-id"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/configdocs/{collection-id}:
    get:
      description: Retrieve a collection of configuration documents with redacted secrets
      operationId: retrieveConfigDocsRedactedByCollectionId
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/collection-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/configdocs/{collection-id}:
    get:
      description: Retrieve a collection of configuration documents with cleartext secrets.
      operationId: retrieveConfigDocsClearTextByCollectionId
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/collection-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/commitconfigdocs:
    post:
      description: Move documents from the Shipyard buffer to the committed documents
      operationId: commitConfigDocs
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/renderedconfigdocs:
    get:
      description: Retrieve the configuration documents rendered by Deckhand into a complete design
      operationId: retrieveRenderedConfigDocs
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/renderedconfigdocs:
    get:
      description: Retrieve the configuration documents with cleartext secrets rendered by Deckhand into a complete design
      operationId: retrieveRenderedCleartextConfigDocs
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/workflows:
    get:
      description: Retrieve the list of workflows (DAGs) that have been invoked in Airflow, whether via Shipyard or scheduled
      operationId: getWorkflows
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/workflows/{workflow-id}:
    get:
      description: Retrieve the detailed information for a workflow (DAG) from Airflow
      operationId: getWorkflowById
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/workflow-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/notedetails/{note-id}:
    get:
      description: Retrieve the details for a note. Further authorization is required depending on the topic of the note
      operationId: getNoteDetails
      parameters:
        - $ref: "#/parameters/x-auth-token"
        - $ref: "#/parameters/note-id"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/site_statuses:
    get:
      description: Retrieve the statuses for the site
      operationId: getSiteStatuses
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-get-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action to deploy the site
      operationId: createDeploySiteWFAction
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action to update the site
      operationId: createUpdateSiteWFAction
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action to update the site software
      operationId: createUpdateSiteSoftwareWFAction
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action to redeploy target servers
      operationId: createReployTargetServersWFAction
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action to relabel target nodes
      operationId: relabelTargetNodes
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
  /api/v1.0/actions:
    post:
      description: Create a workflow action to invoke Helm tests on all releases or a targeted release
      operationId: invokeHelmTests
      parameters:
        - $ref: "#/parameters/x-auth-token"
      responses:
        '200':
          $ref: "#/responses/response-post-simple"
        '401':
          $ref: "#/responses/err-no-auth"
        '403':
          $ref: "#/responses/err-forbidden"
        '500':
          $ref: "#/responses/err-server-error"
parameters:
  x-auth-token:
    in: header
    name: X-Auth-Token
    required: false
    type: string
    description: A fernet keystone bearer token used for authentication and authorization
  content-type:
    in: header
    name: Content-Type
    required: true
    type: string
  action-id:
    in: path
    name: action-id
    required: true
    type: string
  step-id:
    in: path
    name: step-id
    required: true
    type: string
  collection-id:
    in: path
    name: collection-id
    required: true
    type: string
  validation-id:
    in: path
    name: validation-id
    required: true
    type: string
  control-verb:
    in: path
    name: control-verb
    required: true
    type: string
  workflow-id:
    in: path
    name: workflow-id
    required: true
    type: string
  note-id:
    in: path
    name: note-id
    required: true
    type: string

responses:
  # HTTP error responses
  err-bad-request:
    description: 400 Bad request
  err-no-auth:
    description: 401 Not authorized
  err-forbidden:
    description: 403 Forbidden
  err-not-found:
    description: 404 Not found
  err-not-allowed:
    description: 405 Method not allowed
  err-unsupported-media-type:
    description: |
      415 Unsupported Media Type

      Mime type needs to be application/json or application/x-yaml.
  err-server-error:
    description: 500 Internal Server Error
  # API responses
  response-post-apply:
    description: Response of application of an Shipyard manifest
    schema:
      allOf:
        - $ref: "#/definitions/applyresult"
  response-get-versions:
    description: Response of getting Shipyard versions
    schema:
      allOf:
      - $ref: "#/definitions/versions"
      example:
        v1.0:
          path: /api/v1.0
          status: stable
  response-get-status:
    description: Response of Tiller statuses
    schema:
      allOf:
        - $ref: "#/definitions/status"
      example:
        tiller:
          state: True
          version: 0.1.0
  response-get-simple:
    description: Generic String answer
    schema:
      type: string
      example:
          "simple"
  response-post-simple:
    description: Generic String answer
    schema:
      type: string
      example:
          "simple"
definitions:
  status:
    type: object
    properties:
      tiller:
        type: object
        properties:
          state:
            type: boolean
          version:
            type: string
  metadata:
    type: object
    additionalProperties:
      type: string
  simple:
    type: string
  detail:
    type: object
    properties:
      errorCount:
        type: integer
      messageList:
        type: array
        items:
          type: string
  applyresult:
    type: object
    properties:
      message:
        type: object
        properties:
          install:
            type: array
            items:
              type: string
          upgrade:
            type: array
            items:
              type: string
          diff:
            type: object
            additionalProperties:
              type: string
  versions:
    type: object
    additionalProperties:
      $ref: "#/definitions/version"
  version:
    type: object
    properties:
      path:
        type: string
      status:
        type: string
  base-response:
    type: object
    properties:
      kind:
        type: string
      apiVersion:
        type: string
      reason:
        type: string
      metadata:
        $ref: "#/definitions/metadata"
      details:
        $ref: "#/definitions/detail"
      status:
        type: string
      message:
        type: string
      code:
        type: integer
