// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetSiteStatusesHandlerFunc turns a function with the right signature into a get site statuses handler
type GetSiteStatusesHandlerFunc func(GetSiteStatusesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSiteStatusesHandlerFunc) Handle(params GetSiteStatusesParams) middleware.Responder {
	return fn(params)
}

// GetSiteStatusesHandler interface for that can handle valid get site statuses params
type GetSiteStatusesHandler interface {
	Handle(GetSiteStatusesParams) middleware.Responder
}

// NewGetSiteStatuses creates a new http.Handler for the get site statuses operation
func NewGetSiteStatuses(ctx *middleware.Context, handler GetSiteStatusesHandler) *GetSiteStatuses {
	return &GetSiteStatuses{Context: ctx, Handler: handler}
}

/*GetSiteStatuses swagger:route GET /api/v1.0/site_statuses getSiteStatuses

Retrieve the statuses for the site

*/
type GetSiteStatuses struct {
	Context *middleware.Context
	Handler GetSiteStatusesHandler
}

func (o *GetSiteStatuses) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSiteStatusesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
