// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetNoteDetailsHandlerFunc turns a function with the right signature into a get note details handler
type GetNoteDetailsHandlerFunc func(GetNoteDetailsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNoteDetailsHandlerFunc) Handle(params GetNoteDetailsParams) middleware.Responder {
	return fn(params)
}

// GetNoteDetailsHandler interface for that can handle valid get note details params
type GetNoteDetailsHandler interface {
	Handle(GetNoteDetailsParams) middleware.Responder
}

// NewGetNoteDetails creates a new http.Handler for the get note details operation
func NewGetNoteDetails(ctx *middleware.Context, handler GetNoteDetailsHandler) *GetNoteDetails {
	return &GetNoteDetails{Context: ctx, Handler: handler}
}

/*GetNoteDetails swagger:route GET /api/v1.0/notedetails/{note-id} getNoteDetails

Retrieve the details for a note. Further authorization is required depending on the topic of the note

*/
type GetNoteDetails struct {
	Context *middleware.Context
	Handler GetNoteDetailsHandler
}

func (o *GetNoteDetails) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetNoteDetailsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
