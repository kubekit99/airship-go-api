// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kubekit99/airship-go-api/armada/models"
)

// PostApplyManifestReader is a Reader for the PostApplyManifest structure.
type PostApplyManifestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostApplyManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostApplyManifestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostApplyManifestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostApplyManifestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostApplyManifestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewPostApplyManifestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostApplyManifestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostApplyManifestOK creates a PostApplyManifestOK with default headers values
func NewPostApplyManifestOK() *PostApplyManifestOK {
	return &PostApplyManifestOK{}
}

/*PostApplyManifestOK handles this case with default header values.

Response of application of an Armada manifest
*/
type PostApplyManifestOK struct {
	Payload *PostApplyManifestOKBody
}

func (o *PostApplyManifestOK) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/apply][%d] postApplyManifestOK  %+v", 200, o.Payload)
}

func (o *PostApplyManifestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostApplyManifestOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostApplyManifestBadRequest creates a PostApplyManifestBadRequest with default headers values
func NewPostApplyManifestBadRequest() *PostApplyManifestBadRequest {
	return &PostApplyManifestBadRequest{}
}

/*PostApplyManifestBadRequest handles this case with default header values.

400 Bad request
*/
type PostApplyManifestBadRequest struct {
}

func (o *PostApplyManifestBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/apply][%d] postApplyManifestBadRequest ", 400)
}

func (o *PostApplyManifestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostApplyManifestUnauthorized creates a PostApplyManifestUnauthorized with default headers values
func NewPostApplyManifestUnauthorized() *PostApplyManifestUnauthorized {
	return &PostApplyManifestUnauthorized{}
}

/*PostApplyManifestUnauthorized handles this case with default header values.

401 Not authorized
*/
type PostApplyManifestUnauthorized struct {
}

func (o *PostApplyManifestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/apply][%d] postApplyManifestUnauthorized ", 401)
}

func (o *PostApplyManifestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostApplyManifestForbidden creates a PostApplyManifestForbidden with default headers values
func NewPostApplyManifestForbidden() *PostApplyManifestForbidden {
	return &PostApplyManifestForbidden{}
}

/*PostApplyManifestForbidden handles this case with default header values.

403 Forbidden
*/
type PostApplyManifestForbidden struct {
}

func (o *PostApplyManifestForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/apply][%d] postApplyManifestForbidden ", 403)
}

func (o *PostApplyManifestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostApplyManifestUnsupportedMediaType creates a PostApplyManifestUnsupportedMediaType with default headers values
func NewPostApplyManifestUnsupportedMediaType() *PostApplyManifestUnsupportedMediaType {
	return &PostApplyManifestUnsupportedMediaType{}
}

/*PostApplyManifestUnsupportedMediaType handles this case with default header values.

415 Unsupported Media Type

Mime type needs to be application/json or application/x-yaml.

*/
type PostApplyManifestUnsupportedMediaType struct {
}

func (o *PostApplyManifestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/apply][%d] postApplyManifestUnsupportedMediaType ", 415)
}

func (o *PostApplyManifestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostApplyManifestInternalServerError creates a PostApplyManifestInternalServerError with default headers values
func NewPostApplyManifestInternalServerError() *PostApplyManifestInternalServerError {
	return &PostApplyManifestInternalServerError{}
}

/*PostApplyManifestInternalServerError handles this case with default header values.

500 Internal Server Error
*/
type PostApplyManifestInternalServerError struct {
}

func (o *PostApplyManifestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1.0/apply][%d] postApplyManifestInternalServerError ", 500)
}

func (o *PostApplyManifestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostApplyManifestBody post apply manifest body
swagger:model PostApplyManifestBody
*/
type PostApplyManifestBody struct {

	// JSON or YAML representation of the manifest being processed.
	Hrefs interface{} `json:"hrefs,omitempty"`

	// Set of overrides
	Overrides interface{} `json:"overrides,omitempty"`
}

// Validate validates this post apply manifest body
func (o *PostApplyManifestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostApplyManifestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostApplyManifestBody) UnmarshalBinary(b []byte) error {
	var res PostApplyManifestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostApplyManifestOKBody post apply manifest o k body
swagger:model PostApplyManifestOKBody
*/
type PostApplyManifestOKBody struct {
	models.Applyresult
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PostApplyManifestOKBody) UnmarshalJSON(raw []byte) error {
	// PostApplyManifestOKBodyAO0
	var postApplyManifestOKBodyAO0 models.Applyresult
	if err := swag.ReadJSON(raw, &postApplyManifestOKBodyAO0); err != nil {
		return err
	}
	o.Applyresult = postApplyManifestOKBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PostApplyManifestOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	postApplyManifestOKBodyAO0, err := swag.WriteJSON(o.Applyresult)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, postApplyManifestOKBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this post apply manifest o k body
func (o *PostApplyManifestOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Applyresult
	if err := o.Applyresult.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PostApplyManifestOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostApplyManifestOKBody) UnmarshalBinary(b []byte) error {
	var res PostApplyManifestOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
