// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateRelabelNodesTaskHandlerFunc turns a function with the right signature into a create relabel nodes task handler
type CreateRelabelNodesTaskHandlerFunc func(CreateRelabelNodesTaskParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateRelabelNodesTaskHandlerFunc) Handle(params CreateRelabelNodesTaskParams) middleware.Responder {
	return fn(params)
}

// CreateRelabelNodesTaskHandler interface for that can handle valid create relabel nodes task params
type CreateRelabelNodesTaskHandler interface {
	Handle(CreateRelabelNodesTaskParams) middleware.Responder
}

// NewCreateRelabelNodesTask creates a new http.Handler for the create relabel nodes task operation
func NewCreateRelabelNodesTask(ctx *middleware.Context, handler CreateRelabelNodesTaskHandler) *CreateRelabelNodesTask {
	return &CreateRelabelNodesTask{Context: ctx, Handler: handler}
}

/*CreateRelabelNodesTask swagger:route POST /api/v1.0/tasks createRelabelNodesTask

Create relabel_nodes task

*/
type CreateRelabelNodesTask struct {
	Context *middleware.Context
	Handler CreateRelabelNodesTaskHandler
}

func (o *CreateRelabelNodesTask) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateRelabelNodesTaskParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
